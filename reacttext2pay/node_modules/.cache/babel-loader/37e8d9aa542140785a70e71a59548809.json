{"ast":null,"code":"import _classCallCheck from\"/Users/benliu/Documents/Text2Pay/reacttext2pay/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/benliu/Documents/Text2Pay/reacttext2pay/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/Users/benliu/Documents/Text2Pay/reacttext2pay/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/Users/benliu/Documents/Text2Pay/reacttext2pay/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/Users/benliu/Documents/Text2Pay/reacttext2pay/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from'react';import firebase from\"firebase\";var Login=/*#__PURE__*/function(_Component){_inherits(Login,_Component);function Login(){_classCallCheck(this,Login);return _possibleConstructorReturn(this,_getPrototypeOf(Login).apply(this,arguments));}_createClass(Login,[{key:\"callGoogleSignIn\",// <!-- after successful login, should take you straight to home.html -->\nvalue:function callGoogleSignIn(){var provider=new firebase.auth.GoogleAuthProvider();provider.setCustomParameters({prompt:'select_account'});provider.addScope('profile');provider.addScope('email');firebase.auth().signInWithPopup(provider).then(function(result){// This gives you a Google Access Token. You can use it to access the Google API.\nvar token=result.credential.accessToken;// The signed-in user info.\nvar user=result.user;console.log(token);console.log(user);// ...\n}).catch(function(error){// Handle Errors here.\nvar errorCode=error.code;var errorMessage=error.message;// The email of the user's account used.\nvar email=error.email;// The firebase.auth.AuthCredential type that was used.\nvar credential=error.credential;// ...\n});firebase.auth().onAuthStateChanged(function(user){if(user){window.location='home';//After successful login, user will be redirected to home.html\n}});}// <!-- sign in with google, but takes you to the addinfo page after -->\n},{key:\"callGoogleSignUp\",value:function callGoogleSignUp(){var provider=new firebase.auth.GoogleAuthProvider();provider.setCustomParameters({prompt:'select_account'});provider.addScope('profile');provider.addScope('email');firebase.auth().signInWithPopup(provider).then(function(result){// This gives you a Google Access Token. You can use it to access the Google API.\nvar token=result.credential.accessToken;// The signed-in user info.\nvar user=result.user;console.log(token);console.log(user);// ...\n}).catch(function(error){// Handle Errors here.\nvar errorCode=error.code;var errorMessage=error.message;// The email of the user's account used.\nvar email=error.email;// The firebase.auth.AuthCredential type that was used.\nvar credential=error.credential;// ...\n});firebase.auth().onAuthStateChanged(function(user){if(user){window.location=\"addinfo\";//After successful signup, user will be redirected to /addinfo\n}});}},{key:\"render\",value:function render(){var _this=this;return React.createElement(\"div\",null,React.createElement(\"button\",{onClick:function onClick(){return _this.callGoogleSignIn();},style:{margin:\"50px\"},className:\"btn btn-info\"},\"Sign In With Google\"),React.createElement(\"button\",{onClick:function onClick(){return _this.callGoogleSignUp();},style:{margin:\"50px\"},className:\"btn btn-light\"},\"Sign Up With Google\"));}}]);return Login;}(Component);export default Login;","map":{"version":3,"sources":["/Users/benliu/Documents/Text2Pay/reacttext2pay/src/components/Login.jsx"],"names":["React","Component","firebase","Login","provider","auth","GoogleAuthProvider","setCustomParameters","prompt","addScope","signInWithPopup","then","result","token","credential","accessToken","user","console","log","catch","error","errorCode","code","errorMessage","message","email","onAuthStateChanged","window","location","callGoogleSignIn","margin","callGoogleSignUp"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport firebase from \"firebase\";\n\n\nclass Login extends Component {\n  // <!-- after successful login, should take you straight to home.html -->\n  callGoogleSignIn(){\n    var provider = new firebase.auth.GoogleAuthProvider();\n    provider.setCustomParameters({\n      prompt: 'select_account'\n    });\n    provider.addScope('profile');\n    provider.addScope('email');\n    firebase.auth().signInWithPopup(provider).then(function(result) {\n      // This gives you a Google Access Token. You can use it to access the Google API.\n      var token = result.credential.accessToken;\n      // The signed-in user info.\n      var user = result.user;\n      console.log(token)\n      console.log(user)\n      // ...\n    }).catch(function(error) {\n      // Handle Errors here.\n      var errorCode = error.code;\n      var errorMessage = error.message;\n      // The email of the user's account used.\n      var email = error.email;\n      // The firebase.auth.AuthCredential type that was used.\n      var credential = error.credential;\n      // ...\n    });\n  firebase.auth().onAuthStateChanged(user => {\n  if(user) {\n    window.location = 'home'; //After successful login, user will be redirected to home.html\n  }\n});\n}\n\n\n// <!-- sign in with google, but takes you to the addinfo page after -->\ncallGoogleSignUp(){\n    var provider = new firebase.auth.GoogleAuthProvider();\n    provider.setCustomParameters({\n      prompt: 'select_account'\n    });\n    provider.addScope('profile');\n    provider.addScope('email');\n    firebase.auth().signInWithPopup(provider).then(function(result) {\n      // This gives you a Google Access Token. You can use it to access the Google API.\n      var token = result.credential.accessToken;\n      // The signed-in user info.\n      var user = result.user;\n      console.log(token)\n      console.log(user)\n      // ...\n    }).catch(function(error) {\n      // Handle Errors here.\n      var errorCode = error.code;\n      var errorMessage = error.message;\n      // The email of the user's account used.\n      var email = error.email;\n      // The firebase.auth.AuthCredential type that was used.\n      var credential = error.credential;\n      // ...\n    });\n  firebase.auth().onAuthStateChanged(user => {\n  if(user) {\n    window.location = \"addinfo\"; //After successful signup, user will be redirected to /addinfo\n  }\n});\n}\n\nrender(){\n  return (\n    <div >\n    <button onClick={()=> this.callGoogleSignIn()} style={{margin:\"50px\"}} className=\"btn btn-info\" >Sign In With Google</button>\n    <button onClick={()=> this.callGoogleSignUp()} style={{margin:\"50px\"}} className=\"btn btn-light\" >Sign Up With Google</button>\n  </div>\n  );\n  }\n}\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}