{"ast":null,"code":"var _jsxFileName = \"/Users/benliu/Documents/reacttext2pay/src/components/Login.jsx\";\nimport React, { Component } from 'react';\nimport firebase from \"firebase\";\n\nclass Login extends Component {\n  // <!-- after successful login, should take you straight to home.html -->\n  callGoogleSignIn() {\n    var provider = new firebase.auth.GoogleAuthProvider();\n    provider.setCustomParameters({\n      prompt: 'select_account'\n    });\n    provider.addScope('profile');\n    provider.addScope('email');\n    firebase.auth().signInWithPopup(provider).then(function (result) {\n      // This gives you a Google Access Token. You can use it to access the Google API.\n      var token = result.credential.accessToken; // The signed-in user info.\n\n      var user = result.user;\n      console.log(token);\n      console.log(user); // ...\n    }).catch(function (error) {\n      // Handle Errors here.\n      var errorCode = error.code;\n      var errorMessage = error.message; // The email of the user's account used.\n\n      var email = error.email; // The firebase.auth.AuthCredential type that was used.\n\n      var credential = error.credential; // ...\n    });\n    firebase.auth().onAuthStateChanged(user => {\n      if (user) {\n        window.location = 'home'; //After successful login, user will be redirected to home.html\n      }\n    });\n  } // <!-- sign in with google, but takes you to the addinfo page after -->\n\n\n  callGoogleSignUp() {\n    var provider = new firebase.auth.GoogleAuthProvider();\n    provider.setCustomParameters({\n      prompt: 'select_account'\n    });\n    provider.addScope('profile');\n    provider.addScope('email');\n    firebase.auth().signInWithPopup(provider).then(function (result) {\n      // This gives you a Google Access Token. You can use it to access the Google API.\n      var token = result.credential.accessToken; // The signed-in user info.\n\n      var user = result.user;\n      console.log(token);\n      console.log(user); // ...\n    }).catch(function (error) {\n      // Handle Errors here.\n      var errorCode = error.code;\n      var errorMessage = error.message; // The email of the user's account used.\n\n      var email = error.email; // The firebase.auth.AuthCredential type that was used.\n\n      var credential = error.credential; // ...\n    });\n    firebase.auth().onAuthStateChanged(user => {\n      if (user) {\n        window.location = \"addinfo\"; //After successful signup, user will be redirected to /addinfo\n      }\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: () => this.callGoogleSignIn(),\n      style: {\n        margin: \"50px\"\n      },\n      className: \"btn btn-info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"Sign In With Google\"), React.createElement(\"button\", {\n      onClick: () => this.callGoogleSignUp(),\n      style: {\n        margin: \"50px\"\n      },\n      className: \"btn btn-light\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"Sign Up With Google\"));\n  }\n\n}\n\nexport default Login;","map":{"version":3,"sources":["/Users/benliu/Documents/reacttext2pay/src/components/Login.jsx"],"names":["React","Component","firebase","Login","callGoogleSignIn","provider","auth","GoogleAuthProvider","setCustomParameters","prompt","addScope","signInWithPopup","then","result","token","credential","accessToken","user","console","log","catch","error","errorCode","code","errorMessage","message","email","onAuthStateChanged","window","location","callGoogleSignUp","render","margin"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport firebase from \"firebase\";\n\n\nclass Login extends Component {\n  // <!-- after successful login, should take you straight to home.html -->\n  callGoogleSignIn(){\n    var provider = new firebase.auth.GoogleAuthProvider();\n    provider.setCustomParameters({\n      prompt: 'select_account'\n    });\n    provider.addScope('profile');\n    provider.addScope('email');\n    firebase.auth().signInWithPopup(provider).then(function(result) {\n      // This gives you a Google Access Token. You can use it to access the Google API.\n      var token = result.credential.accessToken;\n      // The signed-in user info.\n      var user = result.user;\n      console.log(token)\n      console.log(user)\n      // ...\n    }).catch(function(error) {\n      // Handle Errors here.\n      var errorCode = error.code;\n      var errorMessage = error.message;\n      // The email of the user's account used.\n      var email = error.email;\n      // The firebase.auth.AuthCredential type that was used.\n      var credential = error.credential;\n      // ...\n    });\n  firebase.auth().onAuthStateChanged(user => {\n  if(user) {\n    window.location = 'home'; //After successful login, user will be redirected to home.html\n  }\n});\n}\n\n\n// <!-- sign in with google, but takes you to the addinfo page after -->\ncallGoogleSignUp(){\n    var provider = new firebase.auth.GoogleAuthProvider();\n    provider.setCustomParameters({\n      prompt: 'select_account'\n    });\n    provider.addScope('profile');\n    provider.addScope('email');\n    firebase.auth().signInWithPopup(provider).then(function(result) {\n      // This gives you a Google Access Token. You can use it to access the Google API.\n      var token = result.credential.accessToken;\n      // The signed-in user info.\n      var user = result.user;\n      console.log(token)\n      console.log(user)\n      // ...\n    }).catch(function(error) {\n      // Handle Errors here.\n      var errorCode = error.code;\n      var errorMessage = error.message;\n      // The email of the user's account used.\n      var email = error.email;\n      // The firebase.auth.AuthCredential type that was used.\n      var credential = error.credential;\n      // ...\n    });\n  firebase.auth().onAuthStateChanged(user => {\n  if(user) {\n    window.location = \"addinfo\"; //After successful signup, user will be redirected to /addinfo\n  }\n});\n}\n\nrender(){\n  return (\n    <div >\n    <button onClick={()=> this.callGoogleSignIn()} style={{margin:\"50px\"}} className=\"btn btn-info\" >Sign In With Google</button>\n    <button onClick={()=> this.callGoogleSignUp()} style={{margin:\"50px\"}} className=\"btn btn-light\" >Sign Up With Google</button>\n  </div>\n  );\n  }\n}\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}